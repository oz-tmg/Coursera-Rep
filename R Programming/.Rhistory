install.packages('DBI')
install.packages('devtools')
devtools::add_path('/Applications/Postgres.app/Contents/Versions/9.4/bin/')
devtools::install('/Users/alexoswald/rpostgresql-read-only/RPostgreSQL')
library(RPostgreSQL)
install.packages('RPostgreSQL')
devtools::install('/Users/alexoswald/rpostgresql-read-only/RPostgreSQL')
devtools::install('/Users/alexanderoswald/rpostgresql-read-only/RPostgreSQL')
library(RPostgreSQL)
install.packages('DBI')
install.packages("DBI")
install.packages('RPostgreSQL')
install.packages("RPostgreSQL")
library(RPostgreSQL)
library(dplyr)
library(reshape2)
make_conn = function(dbname) {drv <- dbDriver("PostgreSQL")conn = src_postgres(dbname = dbname, host = "ec2-52-11-133-142.us-west-2.compute.amazonaws.com", port = "5432", user = "power_user", password = "TMGPowerLizard!99")}
make_conn = function(dbname) {conn = src_postgres(dbname = dbname, host = "ec2-52-11-133-142.us-west-2.compute.amazonaws.com", port = "5432", user = "power_user", password = "TMGPowerLizard!99")}
con <- dbConnect(make_conn)
install.packages('DBI')
install.packages('devtools')
devtools::add_path('/Applications/Postgres.app/Contents/Versions/9.4/bin/')
devtools::install('/Users/alexanderoswald/rpostgresql-read-only/RPostgreSQL')
library(RPostgreSQL)
devtools::install('/Users/alexanderoswald/rpostgresql-read-only/RPostgreSQL')
library(RPostgreSQL)
install.packages("dplyr")
install.packages("reshape2")
library(dplyr)
library(reshape2)
make_conn = function(dbname) {conn = src_postgres(dbname = dbname, host = "ec2-52-11-133-142.us-west-2.compute.amazonaws.com", port = "5432", user = "power_user", password = "TMGPowerLizard!99")}
library(RPostgreSQL)
library(dplyr)
library(reshape2)
make_conn = function(dbname) {conn = src_postgres(dbname = dbname, host = "ec2-52-11-133-142.us-west-2.compute.amazonaws.com", port = "5432", user = "power_user", password = "TMGPowerLizard!99")}
con <- dbConnect(drv, dbname="dbname")
library(RPostgreSQL)
library(dplyr)
library(reshape2)
make_conn = function(dbname) {conn = src_postgres(dbname = dbname, host = "ec2-52-11-133-142.us-west-2.compute.amazonaws.com", port = "5432", user = "power_user", password = "TMGPowerLizard!99")}
conn = make_conn(localytics_2015_05_06)
library(RPostgreSQL)
conn = make_conn(localytics_2015_05_06)
conn = make_conn("localytics_2015_05_06")
getwd()
dir()
setwd("/Users/alexanderoswald/datasciencecoursera/R Programming")
pollutantmean <- function(directory, pollutant, id = 1:332) {
files_list <- list.files(directory, full.names=TRUE)
dat <- data.frame()
for (i in seq_along(id)) {
initial <- read.table(files_list[[id[i]]], nrows=200, header=T, sep=",")
classes <- sapply(initial, class)
dat <- rbind(dat, read.table(files_list[id[i]], header=T, sep=","))
}
if(pollutant=="sulfate") {
mean(dat$sulfate, na.rm=TRUE)
}
else if(pollutant=="nitrate") {
mean(dat$nitrate, na.rm=TRUE)
}
else {
return("You are a naughty person! Please enter either 'sulfate' or 'nitrate' in double quotations!")
}
}
pollutantmean("/Users/alexanderoswald/datasciencecoursera/R Programming/specdata/", "sulfate", 1:10)
## [1] 4.064
pollutantmean("specdata", "nitrate", 70:72)
## [1] 1.706
pollutantmean("specdata", "nitrate", 23)
## [1] 1.281
# PART II
complete <- function(directory, id = 1:332) {
files_list <- list.files(directory, full.names=TRUE)
nobs <- vector("numeric", length = length(id))
for(i in seq_along(id)){
dat <- read.table(files_list[id[i]], header=T, sep=",")
nobs<- rbind(nobs,nrow(complete.cases(dat)))
}
complete <- cbind(id,nobs)
return(complete)
}
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
#First read in the data and put it into a list
files_list <- list.files(directory, full.names=TRUE)
#Declare an empty the size of the column vector to be that of the size of id
nobs <- vector("numeric", length = length(id))
#Use a for loop to run through the data
for for(i in seq_along(id)) {
#Read in the data
dat <- read.table(files_list[id[i]], header=T, sep=",")
#Sum a vector of indicating a complete case and put it into nobs
nobs[i] <- complete.cases(dat)
}
#Combine the id vector and nobs vector by columns
complete <- cbind(id,nobs)
return(complete)
}
complete("specdata", 1)
##   id nobs
## 1  1  117
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
#First read in the data and put it into a list
files_list <- list.files(directory, full.names=TRUE)
#Declare an empty the size of the column vector to be that of the size of id
nobs <- vector("numeric", length = length(id))
#Use a for loop to run through the data
for for(i in seq_along(id)) {
#Read in the data
dat <- read.table(files_list[id[i]], header=T, sep=",")
#Sum a vector of indicating a complete case and put it into nobs
nobs[i] <- complete.cases(dat)
}
#Combine the id vector and nobs vector by columns
#complete <- cbind(id,nobs)
#return(complete)
return(nobs)
}
complete <- function(directory, id = 1:332) {
#First read in the data and put it into a list
files_list <- list.files(directory, full.names=TRUE)
#Declare an empty the size of the column vector to be that of the size of id
nobs <- vector("numeric", length = length(id))
#Use a for loop to run through the data
for for(i in seq_along(id)) {
#Read in the data
dat <- read.table(files_list[id[i]], header=T, sep=",")
#Sum a vector of indicating a complete case and put it into nobs
nobs[i] <- complete.cases(dat)
}
#Combine the id vector and nobs vector by columns
#complete <- cbind(id,nobs)
#return(complete)
return(nobs)
}
complete("specdata", 1)
##   id nobs
## 1  1  117
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
#First read in the data and put it into a list
files_list <- list.files(directory, full.names=TRUE)
#Declare an empty the size of the column vector to be that of the size of id
nobs <- vector("numeric", length = length(id))
#Use a for loop to run through the data
for for(i in seq_along(id)) {
#Read in the data
dat <- read.table(files_list[id[i]], header=T, sep=",")
#Sum a vector of indicating a complete case and put it into nobs
nobs[i] <- sum(complete.cases(dat))
}
#Combine the id vector and nobs vector by columns
#complete <- cbind(id,nobs)
#return(complete)
return(nobs)
}
complete("specdata", 1)
##   id nobs
## 1  1  117
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
#First read in the data and put it into a list
files_list <- list.files(directory, full.names=TRUE)
#Declare an empty the size of the column vector to be that of the size of id
nobs <- vector("numeric", length = length(id))
#Use a for loop to run through the data
for for(i in seq_along(id)) {
#Read in the data
dat <- read.table(files_list[id[i]], header=T, sep=",")
#Sum a vector of indicating a complete case and put it into nobs
obs <- sum(!is.na(dat))
nobs <- rbind(nobs, obs)
}
#Combine the id vector and nobs vector by columns
#complete <- cbind(id,nobs)
#return(complete)
return(nobs)
}
complete("specdata", 1)
##   id nobs
## 1  1  117
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete <- function(directory, id = 1:332) {
#First read in the data and put it into a list
files_list <- list.files(directory, full.names=TRUE)
#Declare an empty the size of the column vector to be that of the size of id
nobs <- vector("numeric", length = length(id))
#Use a for loop to run through the data
for(i in seq_along(id)) {
#Read in the data
dat <- read.table(files_list[id[i]], header=T, sep=",")
#Sum a vector of indicating a complete case and put it into nobs
obs <- sum(!is.na(dat))
nobs <- rbind(nobs, obs)
}
#Combine the id vector and nobs vector by columns
#complete <- cbind(id,nobs)
#return(complete)
return(nobs)
}
complete("specdata", 1)
##   id nobs
## 1  1  117
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
#First read in the data and put it into a list
files_list <- list.files(directory, full.names=TRUE)
#Declare an empty the size of the column vector to be that of the size of id
nobs <- vector("numeric", length = length(id))
#Use a for loop to run through the data
for(i in seq_along(id)) {
#Read in the data
dat <- read.table(files_list[id[i]], header=T, sep=",")
#Sum a vector of indicating a complete case and put it into nobs
obs <- sum(!is.na(dat))
nobs <- rbind(nobs, obs)
}
#Combine the id vector and nobs vector by columns
complete <- cbind(id,nobs)
return(complete)
#return(nobs)
}
complete("specdata", 1)
##   id nobs
## 1  1  117
complete("specdata", c(2, 4, 8, 10, 12))
